{"ast":null,"code":"var _jsxFileName = \"/Users/rick/Git/EcoTrackFront-End/ecotrack-frontend/src/components/calinfo.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport { makeStyles } from '@mui/styles';\nimport Grid from '@mui/material/Grid';\nimport NaturePic from '../img/nature3.jpeg';\nimport { Autocomplete } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst calStyle = makeStyles({\n  cal: {\n    display: 'absolute',\n    position: 'absolute',\n    textAlign: 'center',\n    width: '100%',\n    height: '100%',\n    backgroundColor: '#F1F2ED'\n  },\n  pic: {\n    maxWidth: '100%'\n  }\n});\nconst countryName = [{\n  label: 'Australia',\n  value: '01'\n}, {\n  label: 'USA',\n  value: '02'\n}, {\n  label: 'India',\n  value: '03'\n}, {\n  label: 'India',\n  value: '03'\n}];\nexport default function SelectLabels() {\n  _s();\n  const classes = calStyle();\n  const countries = ['USA', 'Australia'];\n\n  // const types = ['Electricity', 'Waste', 'Travel'];\n\n  //const [countries, setCountry] = React.useState('');\n  const [types, setTypes] = React.useState('');\n\n  // const handleChangecountry = (event) => {\n  //   setCountry(event.target.value);\n  // };\n\n  const handleChangetype = event => {\n    setTypes(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.cal,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          disablePortal: true,\n          id: \"combo-box-demo\",\n          options: wasteTypes,\n          sx: {\n            width: 300\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n            ...params,\n            label: \"Movie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          sx: {\n            m: 1,\n            minWidth: 120,\n            width: 180\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"type-select\",\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"type-select-label\",\n            id: \"type-select\",\n            value: types,\n            label: \"Type\",\n            onChange: handleChangetype,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 1,\n              children: \"Electricity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 2,\n              children: \"Waste\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 3,\n              children: \"Travel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(SelectLabels, \"DPi3ga5zrus+xYxli4bOs54jdIY=\");\n_c = SelectLabels;\nvar _c;\n$RefreshReg$(_c, \"SelectLabels\");","map":{"version":3,"names":["React","InputLabel","MenuItem","FormControl","Select","makeStyles","Grid","NaturePic","Autocomplete","TextField","calStyle","cal","display","position","textAlign","width","height","backgroundColor","pic","maxWidth","countryName","label","value","SelectLabels","classes","countries","types","setTypes","useState","handleChangetype","event","target","wasteTypes","params","m","minWidth"],"sources":["/Users/rick/Git/EcoTrackFront-End/ecotrack-frontend/src/components/calinfo.js"],"sourcesContent":["import * as React from 'react';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport { makeStyles } from '@mui/styles';\nimport Grid from '@mui/material/Grid';\nimport NaturePic from '../img/nature3.jpeg';\nimport { Autocomplete } from '@mui/material';\nimport TextField from '@mui/material/TextField';\n\nconst calStyle = makeStyles({\n   cal: {\n      display: 'absolute',\n      position: 'absolute',\n      textAlign: 'center',\n      width: '100%',\n      height: '100%',\n      backgroundColor: '#F1F2ED',\n\n  },\n  pic: {\n    maxWidth: '100%',\n\n  }\n\n})\n\nconst countryName = [\n  {label:'Australia', value:'01'},\n  {label:'USA', value:'02'},\n  {label:'India', value:'03'},\n  {label:'India', value:'03'},\n]\n\nexport default function SelectLabels() {\n\n  const classes = calStyle();\n\n  const countries = ['USA', 'Australia'];\n\n  // const types = ['Electricity', 'Waste', 'Travel'];\n\n  //const [countries, setCountry] = React.useState('');\n  const [types, setTypes] = React.useState('');\n\n  // const handleChangecountry = (event) => {\n  //   setCountry(event.target.value);\n  // };\n\n  const handleChangetype = (event) => {\n    setTypes(event.target.value);\n  };\n\n  return (\n    <div className={classes.cal}>\n      <Grid container spacing={2}>\n        {/* <Grid item md={6}>\n        <img src={NaturePic} alt='infoysys'className={classes.pic} />\n        </Grid> */}\n        <Grid item xs={12} md={6}>\n        <Autocomplete\n          disablePortal\n          id=\"combo-box-demo\"\n          options={wasteTypes}\n          sx={{ width: 300 }}\n          renderInput={(params) => <TextField {...params} label=\"Movie\" />}\n        />\n        </Grid>\n        <Grid item xs={12}md={6}>\n          <FormControl sx={{ m: 1, minWidth: 120,  width:180 }}>\n            <InputLabel id=\"type-select\">Type</InputLabel>\n            <Select\n              labelId=\"type-select-label\"\n              id=\"type-select\"\n              value={types}\n              label=\"Type\"\n              onChange={handleChangetype}\n            >\n              <MenuItem value={1}>Electricity</MenuItem>\n              <MenuItem value={2}>Waste</MenuItem>\n              <MenuItem value={3}>Travel</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,UAAU,QAAQ,aAAa;AACxC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,SAASC,YAAY,QAAQ,eAAe;AAC5C,OAAOC,SAAS,MAAM,yBAAyB;AAAC;AAEhD,MAAMC,QAAQ,GAAGL,UAAU,CAAC;EACzBM,GAAG,EAAE;IACFC,OAAO,EAAE,UAAU;IACnBC,QAAQ,EAAE,UAAU;IACpBC,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,MAAM;IACdC,eAAe,EAAE;EAErB,CAAC;EACDC,GAAG,EAAE;IACHC,QAAQ,EAAE;EAEZ;AAEF,CAAC,CAAC;AAEF,MAAMC,WAAW,GAAG,CAClB;EAACC,KAAK,EAAC,WAAW;EAAEC,KAAK,EAAC;AAAI,CAAC,EAC/B;EAACD,KAAK,EAAC,KAAK;EAAEC,KAAK,EAAC;AAAI,CAAC,EACzB;EAACD,KAAK,EAAC,OAAO;EAAEC,KAAK,EAAC;AAAI,CAAC,EAC3B;EAACD,KAAK,EAAC,OAAO;EAAEC,KAAK,EAAC;AAAI,CAAC,CAC5B;AAED,eAAe,SAASC,YAAY,GAAG;EAAA;EAErC,MAAMC,OAAO,GAAGd,QAAQ,EAAE;EAE1B,MAAMe,SAAS,GAAG,CAAC,KAAK,EAAE,WAAW,CAAC;;EAEtC;;EAEA;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG3B,KAAK,CAAC4B,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA;EACA;;EAEA,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;IAClCH,QAAQ,CAACG,KAAK,CAACC,MAAM,CAACT,KAAK,CAAC;EAC9B,CAAC;EAED,oBACE;IAAK,SAAS,EAAEE,OAAO,CAACb,GAAI;IAAA,uBAC1B,QAAC,IAAI;MAAC,SAAS;MAAC,OAAO,EAAE,CAAE;MAAA,wBAIzB,QAAC,IAAI;QAAC,IAAI;QAAC,EAAE,EAAE,EAAG;QAAC,EAAE,EAAE,CAAE;QAAA,uBACzB,QAAC,YAAY;UACX,aAAa;UACb,EAAE,EAAC,gBAAgB;UACnB,OAAO,EAAEqB,UAAW;UACpB,EAAE,EAAE;YAAEjB,KAAK,EAAE;UAAI,CAAE;UACnB,WAAW,EAAGkB,MAAM,iBAAK,QAAC,SAAS;YAAA,GAAKA,MAAM;YAAE,KAAK,EAAC;UAAO;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA;MACjE;QAAA;QAAA;QAAA;MAAA,QACK,eACP,QAAC,IAAI;QAAC,IAAI;QAAC,EAAE,EAAE,EAAG;QAAA,EAAE,EAAE,CAAE;QAAA,uBACtB,QAAC,WAAW;UAAC,EAAE,EAAE;YAAEC,CAAC,EAAE,CAAC;YAAEC,QAAQ,EAAE,GAAG;YAAGpB,KAAK,EAAC;UAAI,CAAE;UAAA,wBACnD,QAAC,UAAU;YAAC,EAAE,EAAC,aAAa;YAAA,UAAC;UAAI;YAAA;YAAA;YAAA;UAAA,QAAa,eAC9C,QAAC,MAAM;YACL,OAAO,EAAC,mBAAmB;YAC3B,EAAE,EAAC,aAAa;YAChB,KAAK,EAAEW,KAAM;YACb,KAAK,EAAC,MAAM;YACZ,QAAQ,EAAEG,gBAAiB;YAAA,wBAE3B,QAAC,QAAQ;cAAC,KAAK,EAAE,CAAE;cAAA,UAAC;YAAW;cAAA;cAAA;cAAA;YAAA,QAAW,eAC1C,QAAC,QAAQ;cAAC,KAAK,EAAE,CAAE;cAAA,UAAC;YAAK;cAAA;cAAA;cAAA;YAAA,QAAW,eACpC,QAAC,QAAQ;cAAC,KAAK,EAAE,CAAE;cAAA,UAAC;YAAM;cAAA;cAAA;cAAA;YAAA,QAAW;UAAA;YAAA;YAAA;YAAA;UAAA,QAC9B;QAAA;UAAA;UAAA;UAAA;QAAA;MACG;QAAA;QAAA;QAAA;MAAA,QACT;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,GArDuBN,YAAY;AAAA,KAAZA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}