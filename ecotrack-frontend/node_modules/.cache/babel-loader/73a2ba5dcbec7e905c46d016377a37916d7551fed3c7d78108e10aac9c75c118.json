{"ast":null,"code":"var _jsxFileName = \"/Users/rick/Git/EcoTrackFront-End/ecotrack-frontend/src/components/calinfo.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { makeStyles } from '@mui/styles';\nimport Grid from '@mui/material/Grid';\nimport NaturePic from '../img/nature3.jpeg';\nimport { Autocomplete } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { Link } from 'react-router-dom';\nimport Elecal from '../components/elecal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst calStyle = makeStyles({\n  cal: {\n    display: 'absolute',\n    position: 'absolute',\n    textAlign: 'center',\n    width: '100%',\n    height: '100%',\n    backgroundColor: '#F1F2ED'\n  },\n  pic: {\n    maxWidth: '100%'\n  }\n});\nconst countryName = [{\n  label: 'Australia',\n  value: '01'\n}, {\n  label: 'USA',\n  value: '02'\n}, {\n  label: 'India',\n  value: '03'\n}, {\n  label: 'New Zeland',\n  value: '04'\n}];\nconst calType = [{\n  label: 'Electricity',\n  value: '91'\n}, {\n  label: 'Waste',\n  value: '92'\n}];\nexport default function SelectLabels() {\n  _s();\n  const classes = calStyle();\n  const [statevalue, setStateValue] = useState([]);\n  const [elecvalue, setElecValue] = useState([]);\n  const handleSubmit = async event => {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Accept', 'application/json');\n    headers.append('Origin', 'http://localhost:3000');\n    event.preventDefault();\n    const response = await fetch('http://localhost:5000/elecdata', {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify({\n        state: statevalue,\n        elec: elecvalue\n      })\n    });\n    const result = await response.json();\n    console.log(result);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.cal,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          disablePortal: true,\n          id: \"country\",\n          options: countryName,\n          sx: {\n            width: 300,\n            mt: 2\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n            ...params,\n            label: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 36\n          }, this),\n          onChange: (event, countryvalue) => console.log(countryvalue)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          disablePortal: true,\n          id: \"type\",\n          options: calType,\n          sx: {\n            width: 300,\n            mt: 2\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n            ...params,\n            label: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 36\n          }, this),\n          onChange: (event, typevalue) => console.log(typevalue)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          sx: {\n            width: 300,\n            mt: 2,\n            color: '#7ECA58',\n            background: '#7ECA58'\n          },\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/electricity\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.cal,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                className: classes.text,\n                disablePortal: true,\n                id: \"state\",\n                options: stateName,\n                sx: {\n                  width: 300,\n                  mt: 2\n                },\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                  ...params,\n                  label: \"state\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 42\n                }, this),\n                onChange: event => {\n                  setStateValue(event.target.textContent);\n                }\n                //onChange={handleChange}\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                className: classes.text,\n                sx: {\n                  width: 300,\n                  mt: 2\n                },\n                required: true,\n                id: \"outlined-required\",\n                label: \"electricity(kWh)\",\n                defaultValue: \"0\",\n                onChange: event => {\n                  setElecValue(event.target.value);\n                }\n                //onChange={handleChange}\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.button,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  type: \"submit\",\n                  sx: {\n                    width: 300,\n                    mt: 12,\n                    background: '#7ECA58'\n                  }\n                  //onClick={ handleClick }\n                  ,\n                  children: \"Claculate\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.result,\n          children: /*#__PURE__*/_jsxDEV(Result, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(SelectLabels, \"tqXhjENmoDkUQU5m9gI5XpELV/Y=\");\n_c = SelectLabels;\nvar _c;\n$RefreshReg$(_c, \"SelectLabels\");","map":{"version":3,"names":["React","makeStyles","Grid","NaturePic","Autocomplete","TextField","Button","Link","Elecal","calStyle","cal","display","position","textAlign","width","height","backgroundColor","pic","maxWidth","countryName","label","value","calType","SelectLabels","classes","statevalue","setStateValue","useState","elecvalue","setElecValue","handleSubmit","event","headers","Headers","append","preventDefault","response","fetch","method","body","JSON","stringify","state","elec","result","json","console","log","mt","params","countryvalue","typevalue","color","background","text","stateName","target","textContent","button"],"sources":["/Users/rick/Git/EcoTrackFront-End/ecotrack-frontend/src/components/calinfo.js"],"sourcesContent":["import * as React from 'react';\nimport { makeStyles } from '@mui/styles';\nimport Grid from '@mui/material/Grid';\nimport NaturePic from '../img/nature3.jpeg';\nimport { Autocomplete } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { Link } from 'react-router-dom';\nimport Elecal from '../components/elecal';\n\nconst calStyle = makeStyles({\n   cal: {\n      display: 'absolute',\n      position: 'absolute',\n      textAlign: 'center',\n      width: '100%',\n      height: '100%',\n      backgroundColor: '#F1F2ED',\n\n  },\n  pic: {\n    maxWidth: '100%',\n  }\n})\n\nconst countryName = [\n  {label:'Australia', value:'01'},\n  {label:'USA', value:'02'},\n  {label:'India', value:'03'},\n  {label:'New Zeland', value:'04'},\n]\n\nconst calType = [\n  {label:'Electricity', value:'91'},\n  {label:'Waste', value:'92'},\n]\n\nexport default function SelectLabels() {\n\n\n  const classes = calStyle();\n    \n  const [statevalue, setStateValue] = useState([]);\n  const [elecvalue, setElecValue] = useState([]);\n\n  const handleSubmit = async (event) => {\n      let headers = new Headers();\n\n      headers.append('Content-Type', 'application/json');\n      headers.append('Accept', 'application/json');\n      headers.append('Origin','http://localhost:3000');\n\n      event.preventDefault();\n      const response = await fetch('http://localhost:5000/elecdata', {\n        method: 'POST',\n        headers: headers,\n        body: JSON.stringify({\n          state: statevalue,\n          elec: elecvalue\n        })\n      });\n      const result = await response.json();\n      console.log(result);\n      \n    };\n\n  return (\n    <div className={classes.cal}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={6}>\n        <Autocomplete\n          disablePortal\n          id=\"country\"\n          options={countryName}\n          sx={{ width: 300, mt: 2 }}\n          renderInput={(params) => <TextField {...params} label=\"Country\" />}\n          onChange={(event,countryvalue) => console.log(countryvalue)} \n        />\n        </Grid>\n        <Grid item xs={12}md={6}>\n        <Autocomplete\n          disablePortal\n          id=\"type\"\n          options={calType}\n          sx={{ width: 300, mt: 2 }}\n          renderInput={(params) => <TextField {...params} label=\"Type\" />}\n          onChange={(event,typevalue) => console.log(typevalue)} \n        />\n        </Grid>\n        <Grid item xs={12}>\n          <Button variant=\"contained\"\n          sx={{ width: 300, mt: 2 , color: '#7ECA58',background:'#7ECA58'}}>\n            <Link to=\"/electricity\">Next</Link>\n          </Button>\n        </Grid>\n        <div className={classes.cal}>\n        <Grid container spacing={2}>\n        <form onSubmit={handleSubmit}>\n            <Grid item xs={12} md={6}>\n                <Autocomplete\n                className={classes.text}\n                disablePortal\n                id=\"state\"\n                options={stateName}\n                sx={{ width: 300 , mt: 2}}\n                renderInput={(params) => <TextField {...params} label=\"state\" />}\n                onChange={(event) => {setStateValue(event.target.textContent)}} \n                //onChange={handleChange}\n                />\n            </Grid>\n            <Grid item xs={12}md={6}>\n\n                <TextField\n                className={classes.text}\n                sx={{ width: 300 , mt: 2}}\n                required\n                id=\"outlined-required\"\n                label=\"electricity(kWh)\"\n                defaultValue=\"0\"\n                onChange={(event) => {setElecValue(event.target.value)}}\n                //onChange={handleChange}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <div className={classes.button}>\n                    <Button variant=\"contained\"\n                        type='submit'\n                        sx={{ width: 300 , mt: 12, background:'#7ECA58'}}\n                        //onClick={ handleClick }\n                        >\n                        Claculate\n                    </Button>\n                </div>\n            </Grid>\n            </form>\n        </Grid>\n        <div className={classes.result}>\n            <Result />\n        </div>\n\n    </div>\n      </Grid>\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}