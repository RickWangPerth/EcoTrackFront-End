{"ast":null,"code":"var _jsxFileName = \"/Users/rick/Git/EcoTrackFront-End/ecotrack-frontend/src/components/elecal.js\";\nimport React from 'react';\nimport TextField from '@mui/material/TextField';\nimport { makeStyles } from '@mui/styles';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst calStyle = makeStyles({\n  cal: {\n    display: 'absolute',\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    backgroundColor: '#F1F2ED'\n  },\n  text: {\n    position: 'relative',\n    top: '50%',\n    left: '10%'\n  },\n  button: {\n    position: 'relative',\n    top: '50%',\n    margin: 'auto',\n    width: '300px',\n    height: '50px'\n  }\n});\nconst stateName = [{\n  label: 'New South Wales and ACT',\n  value: '01'\n}, {\n  label: 'Victoria',\n  value: '02'\n}, {\n  label: 'Queensland',\n  value: '03'\n}, {\n  label: 'New South Australia',\n  value: '04'\n}, {\n  label: 'Western Australia',\n  value: '05'\n}, {\n  label: 'Tasmania',\n  value: '06'\n}, {\n  label: 'Northern Territory',\n  value: '07'\n}, {\n  label: 'National',\n  value: '08'\n}];\n\n// const uploadValue = () => {\n//     fench('/upload',{\n//         method: 'POST',\n//         body:\n//     })\n\nexport default function elecal() {\n  const classes = calStyle();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.cal,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            className: classes.text,\n            disablePortal: true,\n            id: \"state\",\n            options: stateName,\n            sx: {\n              width: 300,\n              mt: 2\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n              ...params,\n              label: \"state\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 42\n            }, this),\n            onChange: (event, statevalue) => console.log(statevalue)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.text,\n            sx: {\n              width: 300,\n              mt: 2\n            },\n            required: true,\n            id: \"outlined-required\",\n            label: \"electricity(kWh)\",\n            defaultValue: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.button,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              sx: {\n                width: 300,\n                mt: 12,\n                background: '#7ECA58'\n              },\n              onClick: () => {\n                console.log('onClick');\n              },\n              children: \"Claculate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"names":["React","TextField","makeStyles","Autocomplete","Grid","Button","Link","calStyle","cal","display","position","width","height","backgroundColor","text","top","left","button","margin","stateName","label","value","elecal","classes","mt","params","event","statevalue","console","log","background"],"sources":["/Users/rick/Git/EcoTrackFront-End/ecotrack-frontend/src/components/elecal.js"],"sourcesContent":["import React from 'react';\nimport TextField from '@mui/material/TextField';\nimport { makeStyles } from '@mui/styles';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport { Link } from 'react-router-dom';\n\n\n\nconst calStyle = makeStyles({\n    cal: {\n       display: 'absolute',\n       position: 'absolute',\n       width: '100%',\n       height: '100%',\n       backgroundColor: '#F1F2ED',          \n   },\n   text:{\n    position: 'relative',\n    top: '50%',\n\n    left: '10%',\n   },\n   \n   button:{\n    position: 'relative',\n    top: '50%',\n    margin: 'auto',\n    width: '300px',\n    height: '50px',\n    },\n})\n\nconst stateName = [\n    {label:'New South Wales and ACT', value:'01'},\n    {label:'Victoria', value:'02'},\n    {label:'Queensland', value:'03'},\n    {label:'New South Australia', value:'04'},\n    {label:'Western Australia', value:'05'},\n    {label:'Tasmania', value:'06'},\n    {label:'Northern Territory', value:'07'},\n    {label:'National', value:'08'},\n  ]\n\n// const uploadValue = () => {\n//     fench('/upload',{\n//         method: 'POST',\n//         body:\n//     })\n\nexport default function elecal() {\n    const classes = calStyle();\n  return (\n    \n    <>\n    <div className={classes.cal}>\n        <Grid container spacing={2}>\n            <Grid item xs={12} md={6}>\n                <Autocomplete\n                className={classes.text}\n                disablePortal\n                id=\"state\"\n                options={stateName}\n                sx={{ width: 300 , mt: 2}}\n                renderInput={(params) => <TextField {...params} label=\"state\" />}\n                onChange={(event,statevalue) => console.log(statevalue)} \n                />\n            </Grid>\n            <Grid item xs={12}md={6}>\n                <TextField\n                className={classes.text}\n                sx={{ width: 300 , mt: 2}}\n                required\n                id=\"outlined-required\"\n                label=\"electricity(kWh)\"\n                defaultValue=\"0\"\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <div className={classes.button}>\n                    <Button variant=\"contained\"\n                        sx={{ width: 300 , mt: 12, background:'#7ECA58'}}\n                        onClick={() => { console.log('onClick'); }}\n                        >\n                        Claculate\n                    </Button>\n                </div>\n\n            </Grid>\n        </Grid>\n    </div>\n    </>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}