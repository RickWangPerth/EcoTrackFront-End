{"ast":null,"code":"var _jsxFileName = \"/Users/rick/Git/EcoTrackFront-End/ecotrack-frontend/src/components/info.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { makeStyles } from '@mui/styles';\nimport Grid from '@mui/material/Grid';\nimport { Autocomplete } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst calStyle = makeStyles({\n  cal: {\n    display: 'absolute',\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    backgroundColor: '#F1F2ED'\n  },\n  text: {\n    position: 'relative',\n    top: '50%',\n    left: '10%'\n  }\n});\nconst stateName = [{\n  label: 'New South Wales and ACT'\n}, {\n  label: 'Victoria'\n}, {\n  label: 'Queensland'\n}, {\n  label: 'South Australia'\n}, {\n  label: 'Western Australia'\n}, {\n  label: 'Tasmania'\n}, {\n  label: 'Northern Territory'\n}, {\n  label: 'National'\n}];\nconst countryName = [{\n  label: 'Australia',\n  value: '01'\n}, {\n  label: 'USA',\n  value: '02'\n}, {\n  label: 'India',\n  value: '03'\n}, {\n  label: 'New Zeland',\n  value: '04'\n}];\nconst calType = [{\n  label: 'Electricity',\n  value: '91'\n}, {\n  label: 'Waste',\n  value: '92'\n}, {\n  label: 'fuel',\n  value: '93'\n}];\nexport default function info() {\n  _s();\n  const classes = calStyle();\n  const [statevalue, setStateValue] = useState([]);\n  const [elecvalue, setElecValue] = useState([]);\n  const handleSubmit = async event => {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Accept', 'application/json');\n    headers.append('Origin', 'http://localhost:3000');\n    event.preventDefault();\n    const response = await fetch('http://localhost:5000/elecdata', {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify({\n        state: statevalue,\n        elec: elecvalue\n      })\n    });\n    const result = await response.json();\n    console.log(result);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.cal,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          disablePortal: true,\n          id: \"country\",\n          options: countryName,\n          sx: {\n            width: 300,\n            mt: 2\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n            ...params,\n            label: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 38\n          }, this),\n          onChange: (event, countryvalue) => console.log(countryvalue)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(info, \"tqXhjENmoDkUQU5m9gI5XpELV/Y=\");","map":{"version":3,"names":["React","makeStyles","Grid","Autocomplete","TextField","Button","useState","calStyle","cal","display","position","width","height","backgroundColor","text","top","left","stateName","label","countryName","value","calType","info","classes","statevalue","setStateValue","elecvalue","setElecValue","handleSubmit","event","headers","Headers","append","preventDefault","response","fetch","method","body","JSON","stringify","state","elec","result","json","console","log","mt","params","countryvalue"],"sources":["/Users/rick/Git/EcoTrackFront-End/ecotrack-frontend/src/components/info.js"],"sourcesContent":["import * as React from 'react';\nimport { makeStyles } from '@mui/styles';\nimport Grid from '@mui/material/Grid';\nimport { Autocomplete } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { useState } from 'react';\n\nconst calStyle = makeStyles({\n    cal: {\n       display: 'absolute',\n       position: 'absolute',\n       width: '100%',\n       height: '100%',\n       backgroundColor: '#F1F2ED',          \n   },\n   text:{\n    position: 'relative',\n    top: '50%',\n    left: '10%',\n   },\n\n})\n\nconst stateName = [\n    {label:'New South Wales and ACT'},\n    {label:'Victoria'},\n    {label:'Queensland'},\n    {label:'South Australia'},\n    {label:'Western Australia'},\n    {label:'Tasmania'},\n    {label:'Northern Territory'},\n    {label:'National'},\n  ]\n  const countryName = [\n    {label:'Australia', value:'01'},\n    {label:'USA', value:'02'},\n    {label:'India', value:'03'},\n    {label:'New Zeland', value:'04'},\n  ]\n  \n  const calType = [\n    {label:'Electricity', value:'91'},\n    {label:'Waste', value:'92'},\n    {label:'fuel', value:'93'},\n  ]\n\nexport default function info() {\n    const classes = calStyle();\n    \n    const [statevalue, setStateValue] = useState([]);\n    const [elecvalue, setElecValue] = useState([]);\n  \n    const handleSubmit = async (event) => {\n        let headers = new Headers();\n  \n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        headers.append('Origin','http://localhost:3000');\n  \n        event.preventDefault();\n        const response = await fetch('http://localhost:5000/elecdata', {\n          method: 'POST',\n          headers: headers,\n          body: JSON.stringify({\n            state: statevalue,\n            elec: elecvalue\n          })\n        });\n        const result = await response.json();\n        console.log(result);\n        \n      };\n\n  return (\n    <div className={classes.cal}>\n        <Grid container spacing={2}>\n            <Grid item xs={12} md={6}>\n            <Autocomplete\n            disablePortal\n            id=\"country\"\n            options={countryName}\n            sx={{ width: 300, mt: 2 }}\n            renderInput={(params) => <TextField {...params} label=\"Country\" />}\n            onChange={(event,countryvalue) => console.log(countryvalue)} \n            />\n            </Grid>\n        </Grid>\n\n    </div>\n\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}