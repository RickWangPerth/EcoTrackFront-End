{"ast":null,"code":"var _jsxFileName = \"/Users/rick/Git/EcoTrackFront-End/ecotrack-frontend/src/components/elecal.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport TextField from '@mui/material/TextField';\nimport { makeStyles } from '@mui/styles';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst calStyle = makeStyles({\n  cal: {\n    display: 'absolute',\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    backgroundColor: '#F1F2ED'\n  },\n  text: {\n    position: 'relative',\n    top: '50%',\n    left: '10%'\n  },\n  button: {\n    position: 'relative',\n    top: '50%',\n    margin: 'auto',\n    width: '300px',\n    height: '50px'\n  }\n});\nconst stateName = [{\n  label: 'New South Wales and ACT'\n}, {\n  label: 'Victoria'\n}, {\n  label: 'Queensland'\n}, {\n  label: 'New South Australia'\n}, {\n  label: 'Western Australia'\n}, {\n  label: 'Tasmania'\n}, {\n  label: 'Northern Territory'\n}, {\n  label: 'National'\n}];\nexport default function Elecal() {\n  _s();\n  const classes = calStyle();\n  const [statevalue, setStateValue] = useState([]);\n  const [elecvalue, setElecValue] = useState([]);\n  const handleClick = () => {\n    console.log(statevalue + ' ' + elecvalue);\n    console.log(elecvalue);\n  };\n  const upload = () => {\n    fetch('/members', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(data => {\n      ;\n      console.log(statevalue.value);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.cal,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            className: classes.text,\n            disablePortal: true,\n            id: \"state\",\n            options: stateName,\n            sx: {\n              width: 300,\n              mt: 2\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n              ...params,\n              label: \"state\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 42\n            }, this),\n            onChange: event => {\n              setStateValue(event.target.textContent);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.text,\n            sx: {\n              width: 300,\n              mt: 2\n            },\n            required: true,\n            id: \"outlined-required\",\n            label: \"electricity(kWh)\",\n            defaultValue: \"0\",\n            onChange: event => {\n              setElecValue(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.button,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              sx: {\n                width: 300,\n                mt: 12,\n                background: '#7ECA58'\n              },\n              onClick: handleClick,\n              children: \"Claculate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(Elecal, \"tqXhjENmoDkUQU5m9gI5XpELV/Y=\");\n_c = Elecal;\nvar _c;\n$RefreshReg$(_c, \"Elecal\");","map":{"version":3,"names":["React","TextField","makeStyles","Autocomplete","Grid","Button","useEffect","useState","calStyle","cal","display","position","width","height","backgroundColor","text","top","left","button","margin","stateName","label","Elecal","classes","statevalue","setStateValue","elecvalue","setElecValue","handleClick","console","log","upload","fetch","method","headers","then","res","json","data","value","mt","params","event","target","textContent","background"],"sources":["/Users/rick/Git/EcoTrackFront-End/ecotrack-frontend/src/components/elecal.js"],"sourcesContent":["import React from 'react';\nimport TextField from '@mui/material/TextField';\nimport { makeStyles } from '@mui/styles';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport { useEffect, useState } from 'react';\n\n\n\nconst calStyle = makeStyles({\n    cal: {\n       display: 'absolute',\n       position: 'absolute',\n       width: '100%',\n       height: '100%',\n       backgroundColor: '#F1F2ED',          \n   },\n   text:{\n    position: 'relative',\n    top: '50%',\n\n    left: '10%',\n   },\n   \n   button:{\n    position: 'relative',\n    top: '50%',\n    margin: 'auto',\n    width: '300px',\n    height: '50px',\n    },\n})\n\nconst stateName = [\n    {label:'New South Wales and ACT'},\n    {label:'Victoria'},\n    {label:'Queensland'},\n    {label:'New South Australia'},\n    {label:'Western Australia'},\n    {label:'Tasmania'},\n    {label:'Northern Territory'},\n    {label:'National'},\n]\n\n\nexport default function Elecal() {\n    const classes = calStyle();\n\n\n\n    const [statevalue, setStateValue] = useState([]);\n    const [elecvalue, setElecValue] = useState([]);\n\n    const handleClick = () => {\n        console.log(statevalue+' '+elecvalue);\n        console.log(elecvalue);\n    }\n\n    const upload = () => {\n       \n        fetch('/members',{\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' },\n        }).then(\n            res => res.json())\n        .then( data => {;\n            console.log(statevalue.value);\n        })\n    }\n\n  return (\n    <>\n    <div className={classes.cal}>\n        <Grid container spacing={2}>\n            <Grid item xs={12} md={6}>\n                <Autocomplete\n                className={classes.text}\n                disablePortal\n                id=\"state\"\n                options={stateName}\n                sx={{ width: 300 , mt: 2}}\n                renderInput={(params) => <TextField {...params} label=\"state\" />}\n                onChange={(event) => {setStateValue(event.target.textContent)}} \n                />\n            </Grid>\n            <Grid item xs={12}md={6}>\n                <TextField\n                className={classes.text}\n                sx={{ width: 300 , mt: 2}}\n                required\n                id=\"outlined-required\"\n                label=\"electricity(kWh)\"\n                defaultValue=\"0\"\n                onChange={(event) => {setElecValue(event.target.value)}}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <div className={classes.button}>\n                    <Button variant=\"contained\"\n                        sx={{ width: 300 , mt: 12, background:'#7ECA58'}}\n                        onClick={ handleClick }\n                        >\n                        Claculate\n                    </Button>\n                </div>\n            </Grid>\n        </Grid>\n    </div>\n    </>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}