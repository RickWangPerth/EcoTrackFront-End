{"ast":null,"code":"var _jsxFileName = \"/Users/rick/Git/EcoTrackFront-End/ecotrack-frontend/src/components/elecal.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport TextField from '@mui/material/TextField';\nimport { makeStyles } from '@mui/styles';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst calStyle = makeStyles({\n  cal: {\n    display: 'absolute',\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    backgroundColor: '#F1F2ED'\n  },\n  text: {\n    position: 'relative',\n    top: '50%',\n    left: '10%'\n  },\n  button: {\n    position: 'relative',\n    top: '50%',\n    margin: 'auto',\n    width: '300px',\n    height: '50px'\n  }\n});\nconst stateName = [{\n  label: 'New South Wales and ACT'\n}, {\n  label: 'Victoria'\n}, {\n  label: 'Queensland'\n}, {\n  label: 'New South Australia'\n}, {\n  label: 'Western Australia'\n}, {\n  label: 'Tasmania'\n}, {\n  label: 'Northern Territory'\n}, {\n  label: 'National'\n}];\nexport default function Elecal() {\n  _s();\n  const classes = calStyle();\n\n  //const [data, setData] = useState({});\n\n  const [statevalue, setStateValue] = useState([]);\n  const [elecvalue, setElecValue] = useState([]);\n\n  // const handleChange = (event) => {\n  //     setData({ ...data, [event.target.name]: event.target.value });\n  //   };\n\n  const handleClick = () => {\n    console.log(statevalue + ' ' + elecvalue);\n  };\n  const handleSubmit = async event => {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Accept', 'application/json');\n    headers.append('Origin', 'http://localhost:3000');\n    event.preventDefault();\n    const response = await fetch('http://localhost:5000/api/data', {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify({\n        'state': '1'\n      })\n    });\n    const result = await response.json();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.cal,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              className: classes.text,\n              disablePortal: true,\n              id: \"state\",\n              options: stateName,\n              sx: {\n                width: 300,\n                mt: 2\n              },\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                ...params,\n                label: \"state\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 42\n              }, this),\n              onChange: event => {\n                setStateValue(event.target.textContent);\n              }\n              //onChange={handleChange}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.text,\n              sx: {\n                width: 300,\n                mt: 2\n              },\n              required: true,\n              id: \"outlined-required\",\n              label: \"electricity(kWh)\",\n              defaultValue: \"0\",\n              onChange: event => {\n                setElecValue(event.target.value);\n              }\n              //onChange={handleChange}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.button,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                type: \"submit\",\n                sx: {\n                  width: 300,\n                  mt: 12,\n                  background: '#7ECA58'\n                }\n                //onClick={ handleClick }\n                ,\n                children: \"Claculate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(Elecal, \"tqXhjENmoDkUQU5m9gI5XpELV/Y=\");\n_c = Elecal;\nvar _c;\n$RefreshReg$(_c, \"Elecal\");","map":{"version":3,"names":["React","TextField","makeStyles","Autocomplete","Grid","Button","useEffect","useState","axios","calStyle","cal","display","position","width","height","backgroundColor","text","top","left","button","margin","stateName","label","Elecal","classes","statevalue","setStateValue","elecvalue","setElecValue","handleClick","console","log","handleSubmit","event","headers","Headers","append","preventDefault","response","fetch","method","body","JSON","stringify","result","json","mt","params","target","textContent","value","background"],"sources":["/Users/rick/Git/EcoTrackFront-End/ecotrack-frontend/src/components/elecal.js"],"sourcesContent":["import React from 'react';\nimport TextField from '@mui/material/TextField';\nimport { makeStyles } from '@mui/styles';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\n\n\nconst calStyle = makeStyles({\n    cal: {\n       display: 'absolute',\n       position: 'absolute',\n       width: '100%',\n       height: '100%',\n       backgroundColor: '#F1F2ED',          \n   },\n   text:{\n    position: 'relative',\n    top: '50%',\n\n    left: '10%',\n   },\n   \n   button:{\n    position: 'relative',\n    top: '50%',\n    margin: 'auto',\n    width: '300px',\n    height: '50px',\n    },\n})\n\nconst stateName = [\n    {label:'New South Wales and ACT'},\n    {label:'Victoria'},\n    {label:'Queensland'},\n    {label:'New South Australia'},\n    {label:'Western Australia'},\n    {label:'Tasmania'},\n    {label:'Northern Territory'},\n    {label:'National'},\n]\n\n\nexport default function Elecal() {\n    const classes = calStyle();\n\n    //const [data, setData] = useState({});\n\n    const [statevalue, setStateValue] = useState([]);\n    const [elecvalue, setElecValue] = useState([]);\n\n    // const handleChange = (event) => {\n    //     setData({ ...data, [event.target.name]: event.target.value });\n    //   };\n    \n\n    const handleClick = () => {\n        console.log(statevalue+' '+elecvalue);\n    }\n\n    const handleSubmit = async (event) => {\n        let headers = new Headers();\n\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        headers.append('Origin','http://localhost:3000');\n\n        event.preventDefault();\n        const response = await fetch('http://localhost:5000/api/data', {\n          method: 'POST',\n          headers: headers,\n          body: JSON.stringify({\n            'state': '1'\n          })\n        });\n        const result = await response.json();\n        \n      };\n\n  return (\n    <>\n    <div className={classes.cal}>\n        <Grid container spacing={2}>\n        <form onSubmit={handleSubmit}>\n            <Grid item xs={12} md={6}>\n                <Autocomplete\n                className={classes.text}\n                disablePortal\n                id=\"state\"\n                options={stateName}\n                sx={{ width: 300 , mt: 2}}\n                renderInput={(params) => <TextField {...params} label=\"state\" />}\n                onChange={(event) => {setStateValue(event.target.textContent)}} \n                //onChange={handleChange}\n                />\n            </Grid>\n            <Grid item xs={12}md={6}>\n\n                <TextField\n                className={classes.text}\n                sx={{ width: 300 , mt: 2}}\n                required\n                id=\"outlined-required\"\n                label=\"electricity(kWh)\"\n                defaultValue=\"0\"\n                onChange={(event) => {setElecValue(event.target.value)}}\n                //onChange={handleChange}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <div className={classes.button}>\n                    <Button variant=\"contained\"\n                        type='submit'\n                        sx={{ width: 300 , mt: 12, background:'#7ECA58'}}\n                        //onClick={ handleClick }\n                        >\n                        Claculate\n                    </Button>\n                </div>\n            </Grid>\n            </form>\n        </Grid>\n    </div>\n    </>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,UAAU,QAAQ,aAAa;AACxC,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC;AAAA;AAI1B,MAAMC,QAAQ,GAAGP,UAAU,CAAC;EACxBQ,GAAG,EAAE;IACFC,OAAO,EAAE,UAAU;IACnBC,QAAQ,EAAE,UAAU;IACpBC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,MAAM;IACdC,eAAe,EAAE;EACrB,CAAC;EACDC,IAAI,EAAC;IACJJ,QAAQ,EAAE,UAAU;IACpBK,GAAG,EAAE,KAAK;IAEVC,IAAI,EAAE;EACP,CAAC;EAEDC,MAAM,EAAC;IACNP,QAAQ,EAAE,UAAU;IACpBK,GAAG,EAAE,KAAK;IACVG,MAAM,EAAE,MAAM;IACdP,KAAK,EAAE,OAAO;IACdC,MAAM,EAAE;EACR;AACJ,CAAC,CAAC;AAEF,MAAMO,SAAS,GAAG,CACd;EAACC,KAAK,EAAC;AAAyB,CAAC,EACjC;EAACA,KAAK,EAAC;AAAU,CAAC,EAClB;EAACA,KAAK,EAAC;AAAY,CAAC,EACpB;EAACA,KAAK,EAAC;AAAqB,CAAC,EAC7B;EAACA,KAAK,EAAC;AAAmB,CAAC,EAC3B;EAACA,KAAK,EAAC;AAAU,CAAC,EAClB;EAACA,KAAK,EAAC;AAAoB,CAAC,EAC5B;EAACA,KAAK,EAAC;AAAU,CAAC,CACrB;AAGD,eAAe,SAASC,MAAM,GAAG;EAAA;EAC7B,MAAMC,OAAO,GAAGf,QAAQ,EAAE;;EAE1B;;EAEA,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA;EACA;;EAGA,MAAMsB,WAAW,GAAG,MAAM;IACtBC,OAAO,CAACC,GAAG,CAACN,UAAU,GAAC,GAAG,GAACE,SAAS,CAAC;EACzC,CAAC;EAED,MAAMK,YAAY,GAAG,MAAOC,KAAK,IAAK;IAClC,IAAIC,OAAO,GAAG,IAAIC,OAAO,EAAE;IAE3BD,OAAO,CAACE,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC;IAClDF,OAAO,CAACE,MAAM,CAAC,QAAQ,EAAE,kBAAkB,CAAC;IAC5CF,OAAO,CAACE,MAAM,CAAC,QAAQ,EAAC,uBAAuB,CAAC;IAEhDH,KAAK,CAACI,cAAc,EAAE;IACtB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;MAC7DC,MAAM,EAAE,MAAM;MACdN,OAAO,EAAEA,OAAO;MAChBO,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnB,OAAO,EAAE;MACX,CAAC;IACH,CAAC,CAAC;IACF,MAAMC,MAAM,GAAG,MAAMN,QAAQ,CAACO,IAAI,EAAE;EAEtC,CAAC;EAEL,oBACE;IAAA,uBACA;MAAK,SAAS,EAAErB,OAAO,CAACd,GAAI;MAAA,uBACxB,QAAC,IAAI;QAAC,SAAS;QAAC,OAAO,EAAE,CAAE;QAAA,uBAC3B;UAAM,QAAQ,EAAEsB,YAAa;UAAA,wBACzB,QAAC,IAAI;YAAC,IAAI;YAAC,EAAE,EAAE,EAAG;YAAC,EAAE,EAAE,CAAE;YAAA,uBACrB,QAAC,YAAY;cACb,SAAS,EAAER,OAAO,CAACR,IAAK;cACxB,aAAa;cACb,EAAE,EAAC,OAAO;cACV,OAAO,EAAEK,SAAU;cACnB,EAAE,EAAE;gBAAER,KAAK,EAAE,GAAG;gBAAGiC,EAAE,EAAE;cAAC,CAAE;cAC1B,WAAW,EAAGC,MAAM,iBAAK,QAAC,SAAS;gBAAA,GAAKA,MAAM;gBAAE,KAAK,EAAC;cAAO;gBAAA;gBAAA;gBAAA;cAAA,QAAI;cACjE,QAAQ,EAAGd,KAAK,IAAK;gBAACP,aAAa,CAACO,KAAK,CAACe,MAAM,CAACC,WAAW,CAAC;cAAA;cAC7D;YAAA;cAAA;cAAA;cAAA;YAAA;UACE;YAAA;YAAA;YAAA;UAAA,QACC,eACP,QAAC,IAAI;YAAC,IAAI;YAAC,EAAE,EAAE,EAAG;YAAA,EAAE,EAAE,CAAE;YAAA,uBAEpB,QAAC,SAAS;cACV,SAAS,EAAEzB,OAAO,CAACR,IAAK;cACxB,EAAE,EAAE;gBAAEH,KAAK,EAAE,GAAG;gBAAGiC,EAAE,EAAE;cAAC,CAAE;cAC1B,QAAQ;cACR,EAAE,EAAC,mBAAmB;cACtB,KAAK,EAAC,kBAAkB;cACxB,YAAY,EAAC,GAAG;cAChB,QAAQ,EAAGb,KAAK,IAAK;gBAACL,YAAY,CAACK,KAAK,CAACe,MAAM,CAACE,KAAK,CAAC;cAAA;cACtD;YAAA;cAAA;cAAA;cAAA;YAAA;UACE;YAAA;YAAA;YAAA;UAAA,QACC,eACP,QAAC,IAAI;YAAC,IAAI;YAAC,EAAE,EAAE,EAAG;YAAA,uBACd;cAAK,SAAS,EAAE1B,OAAO,CAACL,MAAO;cAAA,uBAC3B,QAAC,MAAM;gBAAC,OAAO,EAAC,WAAW;gBACvB,IAAI,EAAC,QAAQ;gBACb,EAAE,EAAE;kBAAEN,KAAK,EAAE,GAAG;kBAAGiC,EAAE,EAAE,EAAE;kBAAEK,UAAU,EAAC;gBAAS;gBAC/C;gBAAA;gBAAA,UACC;cAEL;gBAAA;gBAAA;gBAAA;cAAA;YAAS;cAAA;cAAA;cAAA;YAAA;UACP;YAAA;YAAA;YAAA;UAAA,QACH;QAAA;UAAA;UAAA;UAAA;QAAA;MACA;QAAA;QAAA;QAAA;MAAA;IACJ;MAAA;MAAA;MAAA;IAAA;EACL,iBACH;AAEP;AAAC,GAlFuB5B,MAAM;AAAA,KAANA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}